/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestDefi, TestDefiInterface } from "../TestDefi";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_yieldRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastYieldTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yieldRate",
        type: "uint256",
      },
    ],
    name: "setYieldRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "stakedBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b5060405161085138038061085183398101604081905261002e91610044565b6001600160a01b0390911660805260025561007b565b5f5f60408385031215610055575f5ffd5b82516001600160a01b038116811461006b575f5ffd5b6020939093015192949293505050565b6080516107a96100a85f395f81816101170152818161032a0152818161042801526105d901526107a95ff3fe608060405234801561000f575f5ffd5b5060043610610090575f3560e01c80635cb3c115116100635780635cb3c115146100ea5780636999ac931461010957806372f702f314610112578063817b1cd214610151578063a694fc3a14610159575f5ffd5b80631411dab01461009457806316765391146100a95780632e17de78146100cf5780634641257d146100e2575b5f5ffd5b6100a76100a236600461069a565b600255565b005b6100bc6100b73660046106b1565b61016c565b6040519081526020015b60405180910390f35b6100a76100dd36600461069a565b610227565b6100a76103b2565b6100bc6100f83660046106b1565b60036020525f908152604090205481565b6100bc60025481565b6101397f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c6565b6001546100bc565b6100a761016736600461069a565b6103bd565b6001600160a01b0381165f90815260208190526040812054810361019157505f919050565b6001600160a01b0382165f908152600360205260408120546101b390426106f2565b6002546001600160a01b0385165f908152602081905260408120549293509164496cebb8009184916101e5919061070b565b6101ef919061070b565b6101f99190610722565b6001600160a01b0385165f9081526020819052604090205490915061021f908290610741565b949350505050565b5f811161026e5760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f7420756e7374616b6520360841b60448201526064015b60405180910390fd5b5f6102783361016c565b9050808211156102ca5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e636500000000006044820152606401610265565b6102d3336104ea565b335f90815260208190526040812080548492906102f19084906106f2565b925050819055508160015f82825461030991906106f2565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610378573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061039c9190610754565b5050335f90815260036020526040902042905550565b6103bb336104ea565b565b5f81116103fd5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610265565b610406336104ea565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610476573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049a9190610754565b50335f90815260208190526040812080548392906104b9908490610741565b925050819055508060015f8282546104d19190610741565b9091555050335f90815260036020526040902042905550565b6001600160a01b0381165f90815260208190526040902054158061052357506001600160a01b0381165f90815260036020526040902054155b15610543576001600160a01b03165f908152600360205260409020429055565b6001600160a01b0381165f9081526003602052604081205461056590426106f2565b9050805f03610572575050565b6002546001600160a01b0383165f90815260208190526040812054909164496cebb8009184916105a19161070b565b6105ab919061070b565b6105b59190610722565b9050801561067d576040516340c10f1960e01b8152306004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044015f604051808303815f87803b158015610622575f5ffd5b505af1158015610634573d5f5f3e3d5ffd5b505050506001600160a01b0383165f908152602081905260408120805483929061065f908490610741565b925050819055508060015f8282546106779190610741565b90915550505b50506001600160a01b03165f908152600360205260409020429055565b5f602082840312156106aa575f5ffd5b5035919050565b5f602082840312156106c1575f5ffd5b81356001600160a01b03811681146106d7575f5ffd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610705576107056106de565b92915050565b8082028115828204841417610705576107056106de565b5f8261073c57634e487b7160e01b5f52601260045260245ffd5b500490565b80820180821115610705576107056106de565b5f60208284031215610764575f5ffd5b815180151581146106d7575f5ffdfea26469706673582212200113139fd4e82cbfdc564207b8f3f0cb220e076f696f858f6ca36cba69ef3f9364736f6c634300081b0033";

export class TestDefi__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _stakingToken: string,
    _yieldRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestDefi> {
    return super.deploy(
      _stakingToken,
      _yieldRate,
      overrides || {}
    ) as Promise<TestDefi>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _yieldRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _yieldRate,
      overrides || {}
    );
  }
  attach(address: string): TestDefi {
    return super.attach(address) as TestDefi;
  }
  connect(signer: Signer): TestDefi__factory {
    return super.connect(signer) as TestDefi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestDefiInterface {
    return new utils.Interface(_abi) as TestDefiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestDefi {
    return new Contract(address, _abi, signerOrProvider) as TestDefi;
  }
}
